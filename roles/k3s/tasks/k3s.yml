---
- name: Read node-token if it exists in master
  ansible.builtin.slurp :
    path: "/var/lib/rancher/k3s/server/node-token"
  register: node_token
  when: inventory_hostname in groups['control'] and var_cluster=="master"
  ignore_errors: yes

- name: set node-token from existing cluster
  ansible.builtin.set_fact:
    k3s_token: "{{ node_token.content | b64decode | trim}}"
  run_once: true
  when: node_token.content is defined

- name: create random token if new cluster
  ansible.builtin.set_fact:
    k3s_token: "{{ lookup('password', '/dev/null', seed=inventory_hostname) }}"
  run_once: true
  when: node_token.content is not defined

#- name: check systemd for k3s on controllers
#  ansible.builtin.systemd:
#    state: started
#    name: k3s
#  register: k3s_status
#  when: inventory_hostname in groups['control']
#  ignore_errors: yes
#
#- name: check systemd for k3s on workers
#  ansible.builtin.systemd:
#    state: started
#    name: k3s-agent
#  register: agent_status
#  when: inventory_hostname in groups['workers']
#  ignore_errors: yes



- name: install k3s on master
  ansible.builtin.shell: curl -sfL https://get.k3s.io | K3S_TOKEN="{{ k3s_token }}" sh -s - server --cluster-init --tls-san {{ haproxy_server }}
  async: 30
  poll: 5
  when: inventory_hostname in groups['control'] and var_cluster=="master"

- name: install k3s on servers
  ansible.builtin.shell: curl -sfL https://get.k3s.io | K3S_TOKEN="{{ k3s_token }}" sh -s - server --server https://192.168.1.60:6443 --tls-san {{ haproxy_server }}
  async: 30
  poll: 5
  when: inventory_hostname in groups['control'] and var_cluster=="server"

- name: install k3s on workers
  ansible.builtin.shell: curl -sfL https://get.k3s.io | K3S_URL="https://{{ haproxy_server }}:6443" K3S_TOKEN="{{ k3s_token }}" sh -
  when: inventory_hostname in groups['workers']

#- name: label worker nodes
#  kubernetes.core.k8s:
#    definition:
#      apiversion: v1
#      kind: Node
#      metadata:
#        label:
#          kubernetes.io/role: worker
#          node-type: worker
#  when: inventory_hostname in groups['workers']